{"version":3,"sources":["components/Header.js","context.js","components/Event.js","components/Events.js","components/TextInputGroup.js","components/AddEvent.js","components/About.js","components/Test.js","components/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","branding","Navbar","bg","variant","className","Brand","href","Nav","to","defaultProps","Context","React","createContext","reducer","state","action","type","events","filter","event","id","payload","Provider","dispatch","setState","axios","get","then","res","data","value","this","children","Component","Consumer","Event","showEventInfo","onShowClick","e","onDeleteClick","delete","mode","credentials","Card","title","icon","faSortDown","onClick","bind","faTimes","Body","ListGroup","Item","userId","body","Events","Fragment","map","key","TextInputGroup","label","name","placeholder","onChange","error","Form","Group","controlId","Label","Control","classnames","AddEvent","region","date","errors","target","onSubmit","preventDefault","v4","history","push","Button","About","Test","console","log","fetch","response","json","NotFound","App","Container","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.a57267c8.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Header = props => {\r\n\r\n    const { branding } = props;\r\n\r\n    return (\r\n        <Navbar bg=\"primary\" variant=\"dark\" className=\"mb-3\">\r\n            <Navbar.Brand href=\"/\">{branding}</Navbar.Brand>\r\n            <Nav className=\"mr-auto\"></Nav>\r\n            <Nav>\r\n                <Link to=\"/\" className=\"nav-link\">Home</Link>\r\n                <Link to=\"/event/add\" className=\"nav-link\">Add Event</Link>\r\n                <Link to=\"/about\" className=\"nav-link\">About</Link>\r\n            </Nav>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    branding: 'My React App'\r\n}\r\n\r\nHeader.propTypes = {\r\n    branding: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type) {\r\n        case 'DELETE_EVENT':\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(event => event.id !== action.payload)\r\n            };\r\n\r\n        case 'ADD_EVENT':\r\n            return {\r\n                ...state,\r\n                events: [action.payload, ...state.events]\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport class Provider extends Component {\r\n\r\n    state = {\r\n        events: [],\r\n        dispatch: action => this.setState(state => reducer(state, action))\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('https://jsonplaceholder.typicode.com/posts')\r\n        .then( res => {\r\n            this.setState({events: res.data})\r\n        } )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../context';\r\nimport axios from 'axios';\r\n\r\nimport { Card, ListGroup } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSortDown, faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass Event extends Component {\r\n\r\n    state = {\r\n        showEventInfo: true\r\n    }\r\n\r\n    static propTypes = {\r\n        event: PropTypes.object.isRequired\r\n    }\r\n\r\n    onShowClick = e => {\r\n        this.setState( { showEventInfo: !this.state.showEventInfo } );\r\n    };\r\n\r\n    onDeleteClick = (id, dispatch) => {\r\n\r\n        axios.delete(`http://jsonplaceholder.typicode.com/posts/${id}`, {mode: 'cors',\r\n        credentials: 'include'})\r\n        .then( res => {\r\n            dispatch({\r\n                type: 'DELETE_EVENT',\r\n                payload: id\r\n            })\r\n        } )\r\n\r\n    };\r\n\r\n    render() {\r\n\r\n        const { event } = this.props;\r\n        const { showEventInfo } = this.state;\r\n\r\n        return (\r\n\r\n            <Consumer>\r\n                {\r\n                    value => {\r\n                        const {dispatch} = value;\r\n                        return (\r\n                            <Card className=\"mb-3\">\r\n                                <Card.Header>\r\n                                    <h4>\r\n                                        {event.title}\r\n                                        <FontAwesomeIcon\r\n                                            icon={faSortDown}\r\n                                            onClick={this.onShowClick.bind(this, event.id)}\r\n                                            className=\"\"\r\n                                        />\r\n\r\n                                        <FontAwesomeIcon\r\n                                            icon={faTimes}\r\n                                            onClick={this.onDeleteClick.bind(this, event.id, dispatch)}\r\n                                            className=\"action\"\r\n                                        />\r\n                                    </h4>\r\n                                </Card.Header>\r\n                                {showEventInfo ?\r\n                                    <Card.Body>\r\n                                        <ListGroup>\r\n                                            <ListGroup.Item>Organizer ID: {event.userId}</ListGroup.Item>\r\n                                            <ListGroup.Item>Body: {event.body}</ListGroup.Item>\r\n                                        </ListGroup>\r\n                                    </Card.Body>\r\n                                : null}\r\n                            </Card>\r\n                        )\r\n                    }\r\n                }\r\n            </Consumer>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Event;\r\n","import React, { Component } from 'react';\r\nimport Event from './Event';\r\n\r\nimport {Consumer} from '../context';\r\n\r\nexport default class Events extends Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Consumer>\r\n                {\r\n                    value => {\r\n                        const { events } = value;\r\n                        return (\r\n                            <React.Fragment>\r\n                                {events.map( event => (\r\n                                    <Event\r\n                                        key={event.id}\r\n                                        event={event}\r\n                                    />\r\n                                ) )}                \r\n                            </React.Fragment>\r\n                        )\r\n                    }\r\n                }\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Form } from 'react-bootstrap';\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({\r\n    label,\r\n    name,\r\n    value,\r\n    placeholder,\r\n    type,\r\n    onChange,\r\n    error\r\n}) => {\r\n    return (\r\n        <Form.Group controlId={name}>\r\n            <Form.Label>{label}</Form.Label>\r\n            <Form.Control\r\n                type={type}\r\n                name={name}\r\n                placeholder={placeholder}\r\n                value={value}\r\n                onChange={onChange}\r\n                className={classnames('', {'is-invalid':error})}\r\n            />\r\n            {error&&<div className=\"invalid-feedback\">{error}</div>}\r\n        </Form.Group>\r\n    )\r\n}\r\n\r\nTextInputGroup.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text'\r\n}\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../context';\r\nimport TextInputGroup from './TextInputGroup';\r\nimport {v4} from 'uuid';\r\nimport { Card, Form, Button } from 'react-bootstrap';\r\n\r\nexport default class AddEvent extends Component {\r\n\r\n    state = {\r\n        name: '',\r\n        region: '',\r\n        date: '',\r\n        errors: {}\r\n    }\r\n\r\n    onChange = e => this.setState({[e.target.name]: e.target.value});\r\n\r\n    onSubmit = (dispatch, e) => {\r\n        e.preventDefault();\r\n        \r\n        const {name, date, region} = this.state;\r\n\r\n        if( !name ) {\r\n            this.setState({errors: {name: 'Name is required.'}});\r\n            return;\r\n        }\r\n\r\n        if( !region ) {\r\n            this.setState({errors: {region: 'Region is required.'}});\r\n            return;\r\n        }\r\n\r\n        if( !date ) {\r\n            this.setState({errors: {date: 'Date is required.'}});\r\n            return;\r\n        }\r\n\r\n        const newEvent = {\r\n            id: v4(),\r\n            name,\r\n            region,\r\n            date\r\n        }\r\n\r\n        dispatch({\r\n            type: 'ADD_EVENT',\r\n            payload: newEvent\r\n        });\r\n\r\n        this.setState({\r\n            name: '',\r\n            region: '',\r\n            date: '',\r\n            errors: {}\r\n        });\r\n\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n        const { name, date, region, errors } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                  const {dispatch} = value;\r\n                  return (\r\n                    <Card className=\"mb-3\">\r\n                        <Card.Header>\r\n                            <h5>Add Event</h5>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n        \r\n                            <Form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n\r\n                                <TextInputGroup\r\n                                    label=\"Name\"\r\n                                    name=\"name\"\r\n                                    placeholder=\"Enter event name\"\r\n                                    value={name}\r\n                                    onChange={this.onChange}\r\n                                    error={errors.name}\r\n                                />\r\n\r\n                                <TextInputGroup\r\n                                    label=\"Region\"\r\n                                    name=\"region\"\r\n                                    placeholder=\"Enter event region\"\r\n                                    value={region}\r\n                                    onChange={this.onChange}\r\n                                    error={errors.region}\r\n                                />\r\n        \r\n                                <TextInputGroup\r\n                                    label=\"Date\"\r\n                                    name=\"date\"\r\n                                    placeholder=\"Enter event date\"\r\n                                    value={date}\r\n                                    onChange={this.onChange}\r\n                                    error={errors.date}\r\n                                />\r\n\r\n                                <Button variant=\"primary\" type=\"submit\" className=\"btn-block\">\r\n                                    Add Event\r\n                                </Button>\r\n                            </Form>\r\n        \r\n                        </Card.Body>\r\n                    </Card>\r\n                  )\r\n                }}\r\n            </Consumer>\r\n        )\r\n\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nexport default function About() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"text-danger\">About Find My Events</h1>\r\n            <p>\r\n                Simple app to showcase events\r\n            </p>\r\n            <p className=\"text-secondary\">v1.0.0</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Test extends Component {\r\n\r\n    state = {\r\n        title: 'Loading...',\r\n        body: 'Loading...'\r\n    }\r\n\r\n   /*  componentDidMount() {\r\n        console.log('componentDidMount');\r\n    }\r\n\r\n    componentWillMount() {\r\n        console.log('componentWillMount');\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        console.log('componentDidUpdate');\r\n    }\r\n\r\n    componentWillUpdate() {\r\n        console.log('componentWillUpdate');\r\n    } */\r\n\r\n    componentDidMount() {\r\n        console.log('componentDidMount');\r\n\r\n        fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            this.setState({\r\n                title: data.title,\r\n                body: data.body\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        console.log('render');\r\n        const { title, body } = this.state;\r\n        return (\r\n            <div>\r\n                <h1>This is a test component...</h1>\r\n                <p>\r\n                    <b>Title:</b> {title}\r\n                </p>\r\n                <p>\r\n                <b>Body:</b> {body}\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nexport const NotFound = () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">Opps! 404 Page Not Found.</h1>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport Header from './components/Header';\nimport Events from './components/Events';\nimport AddEvent from './components/AddEvent';\nimport About from './components/About';\nimport Test from './components/Test';\nimport { NotFound } from './components/NotFound';\n\nimport { Container } from 'react-bootstrap';\n\nimport { Provider } from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div>\n          <Header branding=\"Find My Events\" />\n          <Container>\n            <Switch>\n              <Route exact path=\"/\" component={Events} />\n              <Route exact path=\"/event/add\" component={AddEvent} />\n              <Route exact path=\"/about\" component={About} />\n              <Route exact path=\"/test\" component={Test} />\n              <Route component={NotFound} />\n            </Switch>\n          </Container>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}