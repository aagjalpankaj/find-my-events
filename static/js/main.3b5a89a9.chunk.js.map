{"version":3,"sources":["components/Header.js","context.js","components/Event.js","components/Events.js","components/TextInputGroup.js","components/AddEditEvent.js","components/About.js","components/Test.js","components/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","branding","Navbar","bg","variant","className","to","Nav","defaultProps","Context","React","createContext","reducer","state","action","type","events","filter","event","id","payload","Provider","dispatch","setState","axios","get","res","this","data","value","children","Component","Consumer","Event","showEventInfo","onShowClick","e","onDeleteClick","a","delete","Card","title","icon","faTimes","onClick","bind","faEdit","Body","ListGroup","Item","userId","body","Events","Fragment","map","key","TextInputGroup","label","name","placeholder","onChange","error","Form","Group","controlId","Label","Control","classnames","AddEditEvent","errors","target","onSubmit","preventDefault","valid","newEvent","post","history","push","match","params","header","submitLabel","Button","About","Test","console","log","fetch","then","response","json","NotFound","App","Container","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.3b5a89a9.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = props => {\r\n\r\n    const { branding } = props;\r\n\r\n    return (\r\n        <Navbar bg=\"primary\" variant=\"dark\" className=\"mb-3\">\r\n            <Link to=\"/\" className=\"navbar-brand\">{branding}</Link>\r\n            <Nav className=\"mr-auto\"></Nav>\r\n            <Nav>\r\n                <Link to=\"/\" className=\"nav-link\">Home</Link>\r\n                <Link to=\"/event/add\" className=\"nav-link\">Add Event</Link>\r\n                <Link to=\"/about\" className=\"nav-link\">About</Link>\r\n            </Nav>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    branding: 'My React App'\r\n}\r\n\r\nHeader.propTypes = {\r\n    branding: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type) {\r\n        case 'DELETE_EVENT':\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(event => event.id !== action.payload)\r\n            };\r\n\r\n        case 'ADD_EVENT':\r\n            return {\r\n                ...state,\r\n                events: [action.payload, ...state.events]\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport class Provider extends Component {\r\n\r\n    state = {\r\n        events: [],\r\n        dispatch: action => this.setState(state => reducer(state, action))\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const res = await axios.get('https://jsonplaceholder.typicode.com/posts');\r\n        this.setState({events: res.data});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../context';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Card, ListGroup } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes, faEdit } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass Event extends Component {\r\n\r\n    state = {\r\n        showEventInfo: true\r\n    }\r\n\r\n    static propTypes = {\r\n        event: PropTypes.object.isRequired\r\n    }\r\n\r\n    onShowClick = e => {\r\n        this.setState( { showEventInfo: !this.state.showEventInfo } );\r\n    };\r\n\r\n    onDeleteClick = async (id, dispatch) => {\r\n        \r\n        try {\r\n            await axios.delete(`https://jsonplaceholder.typicode.com/posts/${id}`);\r\n            dispatch({ type: 'DELETE_EVENT', payload: id });\r\n        } catch(e) {\r\n            dispatch({ type: 'DELETE_EVENT', payload: id });\r\n        }\r\n        \r\n    };\r\n\r\n    render() {\r\n\r\n        const { event } = this.props;\r\n        const { showEventInfo } = this.state;\r\n\r\n        return (\r\n\r\n            <Consumer>\r\n                {\r\n                    value => {\r\n                        const {dispatch} = value;\r\n                        return (\r\n                            <Card className=\"mb-3\">\r\n                                <Card.Header>\r\n                                    <h4>\r\n                                        <span className=\"dot3\">{event.title}</span>\r\n\r\n                                        <FontAwesomeIcon\r\n                                            icon={faTimes}\r\n                                            onClick={this.onDeleteClick.bind(this, event.id, dispatch)}\r\n                                            className=\"action\"\r\n                                        />\r\n\r\n                                        <Link to={`event/edit/${event.id}`}>\r\n                                            <FontAwesomeIcon\r\n                                                icon={faEdit}\r\n                                                className=\"action\"\r\n                                            />\r\n                                        </Link>\r\n                                    </h4>\r\n                                </Card.Header>\r\n                                {showEventInfo ?\r\n                                    <Card.Body>\r\n                                        <ListGroup>\r\n                                            <ListGroup.Item>Event ID: {event.id}</ListGroup.Item>\r\n                                            <ListGroup.Item>Added By (User ID): {event.userId}</ListGroup.Item>\r\n                                            <ListGroup.Item>Event Details: {event.body}</ListGroup.Item>\r\n                                        </ListGroup>\r\n                                    </Card.Body>\r\n                                : null}\r\n                            </Card>\r\n                        )\r\n                    }\r\n                }\r\n            </Consumer>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Event;\r\n","import React, { Component } from 'react';\r\nimport Event from './Event';\r\n\r\nimport {Consumer} from '../context';\r\n\r\nexport default class Events extends Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Consumer>\r\n                {\r\n                    value => {\r\n                        const { events } = value;\r\n                        return (\r\n                            <React.Fragment>\r\n                                {events.map( event => (\r\n                                    <Event\r\n                                        key={event.id}\r\n                                        event={event}\r\n                                    />\r\n                                ) )}                \r\n                            </React.Fragment>\r\n                        )\r\n                    }\r\n                }\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Form } from 'react-bootstrap';\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({\r\n    label,\r\n    name,\r\n    value,\r\n    placeholder,\r\n    type,\r\n    onChange,\r\n    error\r\n}) => {\r\n    return (\r\n        <Form.Group controlId={name}>\r\n            <Form.Label>{label}</Form.Label>\r\n            <Form.Control\r\n                type={type}\r\n                name={name}\r\n                placeholder={placeholder}\r\n                value={value}\r\n                onChange={onChange}\r\n                className={classnames('', {'is-invalid':error})}\r\n            />\r\n            {error&&<div className=\"invalid-feedback\">{error}</div>}\r\n        </Form.Group>\r\n    )\r\n}\r\n\r\nTextInputGroup.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text'\r\n}\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../context';\r\nimport TextInputGroup from './TextInputGroup';\r\nimport axios from 'axios';\r\nimport { Card, Form, Button } from 'react-bootstrap';\r\n\r\nexport default class AddEditEvent extends Component {\r\n\r\n    state = {\r\n        id: '',\r\n        title: '',\r\n        body: '',\r\n        userId: '',\r\n        errors: []\r\n    }\r\n\r\n    onChange = e => this.setState({[e.target.name]: e.target.value});\r\n\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/posts/${id}`);\r\n\r\n        const event = res.data;\r\n\r\n        this.setState({\r\n            id: event.id,\r\n            title: event.title,\r\n            body: event.body,\r\n            userId: event.userId\r\n        });\r\n    }\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n        \r\n        const {title, body, userId} = this.state;\r\n\r\n        let valid = true;\r\n        let errors = [];\r\n\r\n        if( !title ) {\r\n            errors.title =  'Title is required.';\r\n            valid = false;\r\n        }\r\n\r\n        if( !body ) {\r\n            errors.body =  'Details are required.';\r\n            valid = false;\r\n        }\r\n\r\n        if( !userId ) {\r\n            errors.userId =  'User ID is required.';\r\n            valid = false;\r\n        }\r\n\r\n        this.setState({ errors: errors });\r\n\r\n        if( !valid ) {\r\n            return;\r\n        }\r\n\r\n        const newEvent = {\r\n            title: title,\r\n            body: body,\r\n            userId: userId\r\n        }\r\n\r\n        const res = await axios.post('https://jsonplaceholder.typicode.com/posts', newEvent);\r\n\r\n        dispatch({\r\n            type: 'ADD_EVENT',\r\n            payload: res.data\r\n        });\r\n\r\n        this.setState({\r\n            title: '',\r\n            body: '',\r\n            userId: '',\r\n            errors: {}\r\n        });\r\n\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n        const { id, title, body, userId, errors } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                  const {dispatch} = value;\r\n                  let header = 'Add Event';\r\n                  let submitLabel = 'Add Event';\r\n\r\n                  if(id) {\r\n                    header = 'Edit Event';\r\n                    submitLabel = 'Update Event';\r\n                  }\r\n\r\n                  return (\r\n                    <Card className=\"mb-3\">\r\n                        <Card.Header>\r\n                            <h5>{header}</h5>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n        \r\n                            <Form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n\r\n                                <TextInputGroup\r\n                                    label=\"Title\"\r\n                                    name=\"title\"\r\n                                    placeholder=\"Enter event title\"\r\n                                    value={title}\r\n                                    onChange={this.onChange}\r\n                                    error={errors.title}\r\n                                />\r\n\r\n                                <TextInputGroup\r\n                                    label=\"Details\"\r\n                                    name=\"body\"\r\n                                    placeholder=\"Enter event details\"\r\n                                    value={body}\r\n                                    onChange={this.onChange}\r\n                                    error={errors.body}\r\n                                />\r\n        \r\n                                <TextInputGroup\r\n                                    label=\"User ID\"\r\n                                    name=\"userId\"\r\n                                    placeholder=\"Enter user ID\"\r\n                                    value={userId}\r\n                                    onChange={this.onChange}\r\n                                    error={errors.userId}\r\n                                />\r\n\r\n                                <Button variant=\"primary\" type=\"submit\" className=\"btn-block\">\r\n                                    {submitLabel}\r\n                                </Button>\r\n                            </Form>\r\n        \r\n                        </Card.Body>\r\n                    </Card>\r\n                  )\r\n                }}\r\n            </Consumer>\r\n        )\r\n\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nexport default function About() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"text-danger\">About Find My Events</h1>\r\n            <p>\r\n                Simple app to showcase events\r\n            </p>\r\n            <p className=\"text-secondary\">v1.0.0</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Test extends Component {\r\n\r\n    state = {\r\n        title: 'Loading...',\r\n        body: 'Loading...'\r\n    }\r\n\r\n   /*  componentDidMount() {\r\n        console.log('componentDidMount');\r\n    }\r\n\r\n    componentWillMount() {\r\n        console.log('componentWillMount');\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        console.log('componentDidUpdate');\r\n    }\r\n\r\n    componentWillUpdate() {\r\n        console.log('componentWillUpdate');\r\n    } */\r\n\r\n    componentDidMount() {\r\n        console.log('componentDidMount');\r\n\r\n        fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            this.setState({\r\n                title: data.title,\r\n                body: data.body\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        console.log('render');\r\n        const { title, body } = this.state;\r\n        return (\r\n            <div>\r\n                <h1>This is a test component...</h1>\r\n                <p>\r\n                    <b>Title:</b> {title}\r\n                </p>\r\n                <p>\r\n                <b>Body:</b> {body}\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nexport const NotFound = () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">Opps! 404 Page Not Found.</h1>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport Header from './components/Header';\nimport Events from './components/Events';\nimport AddEditEvent from './components/AddEditEvent';\nimport About from './components/About';\nimport Test from './components/Test';\nimport { NotFound } from './components/NotFound';\n\nimport { Container } from 'react-bootstrap';\n\nimport { Provider } from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div>\n          <Header branding=\"Find My Events\" />\n          <Container>\n            <Switch>\n              <Route exact path=\"/\" component={Events} />\n              <Route exact path=\"/event/add\" component={AddEditEvent} />\n              <Route exact path=\"/event/edit/:id\" component={AddEditEvent} />\n              <Route exact path=\"/about\" component={About} />\n              <Route exact path=\"/test\" component={Test} />\n              <Route component={NotFound} />\n            </Switch>\n          </Container>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}